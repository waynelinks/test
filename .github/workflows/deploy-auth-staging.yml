name: Deploy to Vercel (staging) - Auth

on:
  push:
    branches-ignore:
      - "main"
    paths:
      - '.github/workflows/deploy-auth-staging.yml'
env:
  STAGE: staging

jobs:
  setup-environment:
    name: Setup deployment environment (Ubuntu 20.04 - Node 14.x)
    runs-on: ubuntu-20.04
    steps:
        - run: node -v
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Locate yarn path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - name: Cache dependencies
#         uses: actions/cache@v3
#         id: yarn-cache
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-

#       - name: Setup node environment
#         uses: actions/setup-node@v3
#         with:
#           node-version: '14.x'
#           cache: "yarn"

#   run-tests-before-staging:
#     needs: [setup-environment]
#     defaults:
#       run:
#         working-directory: packages/api
#     name: Run unit tests before staging
#     runs-on: ubuntu-20.04
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install dependencies
#         run: yarn

#       - name: Run unit tests
#         run: |
#           yarn test

#   start-staging-deployment:
#     needs: [setup-environment, run-tests-before-staging]
#     if: github.repository_owner == 'waynelinks' && ((github.event.pull_request.head.repo.full_name == github.repository) || (github.event_name == 'push'))
#     name: Starts Vercel deployment (staging) (Ubuntu 20.04)
#     runs-on: ubuntu-20.04
#     permissions: 
#       deployments: write
#     defaults:
#       run:
#         working-directory: packages/api
#     timeout-minutes: 40
#     steps:
#       - name: Start auth-srv deployment
#         uses: bobheadxi/deployments@v1
#         id: deployment
#         with:
#           step: start
#           token: ${{ secrets.GITHUB_TOKEN }}
#           env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/main'] }} 
      
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Deploy to Staging
#         id: deploy-vercel-staging
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
#           vercel-project-id: ${{ secrets.VERCEL_AUTH_PROJECT_ID }}
#           scope: ${{ secrets.VERCEL_ORG_ID }}
  
#       - name: Update deployment status
#         uses: bobheadxi/deployments@v1
#         if: always()
#         with:
#           step: finish
#           token: ${{ secrets.GITHUB_TOKEN }}
#           env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/main'] }} 
#           status: ${{ job.status }}
#           deployment_id: ${{ steps.deployment.outputs.deployment_id }}
