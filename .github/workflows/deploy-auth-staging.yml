name: Deploy to Vercel (staging) - Auth

on:
  push:
    branches:
      - "main"
    paths:
      - '.github/workflows/deploy-auth-staging.yml'
env:
  STAGE: staging

jobs:
  setup-environment:
    name: Setup deployment environment (Ubuntu 20.04 - Node 14.x)
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Locate yarn path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup node environment
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
          cache: "yarn"

  run-tests-before-staging:
    defaults:
      run:
        working-directory: packages/api
    name: Run tests before staging
    runs-on: ubuntu-20.04
    needs: [setup-environment]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Run unit tests
        run: |
          yarn test

  staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        uses:
          amondnet/vercel-action@v20
          # with:
          # vercel-token: ${{ secrets.VERCEL_TOKEN }}
          # vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          # vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_TL_ENGINE }}
          # scope: ${{ secrets.VERCEL_ORG_ID }}
